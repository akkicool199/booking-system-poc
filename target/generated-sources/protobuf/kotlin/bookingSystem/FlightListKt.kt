// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: booking.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bookingSystem;

@kotlin.jvm.JvmName("-initializeflightList")
public inline fun flightList(block: bookingSystem.FlightListKt.Dsl.() -> kotlin.Unit): bookingSystem.Booking.FlightList =
  bookingSystem.FlightListKt.Dsl._create(bookingSystem.Booking.FlightList.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `bookingSystem.FlightList`
 */
public object FlightListKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bookingSystem.Booking.FlightList.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bookingSystem.Booking.FlightList.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bookingSystem.Booking.FlightList = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FlightsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .bookingSystem.Flight flights = 1;`
     */
     public val flights: com.google.protobuf.kotlin.DslList<bookingSystem.FlightOuterClass.Flight, FlightsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFlightsList()
      )
    /**
     * `repeated .bookingSystem.Flight flights = 1;`
     * @param value The flights to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFlights")
    public fun com.google.protobuf.kotlin.DslList<bookingSystem.FlightOuterClass.Flight, FlightsProxy>.add(value: bookingSystem.FlightOuterClass.Flight) {
      _builder.addFlights(value)
    }
    /**
     * `repeated .bookingSystem.Flight flights = 1;`
     * @param value The flights to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFlights")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bookingSystem.FlightOuterClass.Flight, FlightsProxy>.plusAssign(value: bookingSystem.FlightOuterClass.Flight) {
      add(value)
    }
    /**
     * `repeated .bookingSystem.Flight flights = 1;`
     * @param values The flights to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFlights")
    public fun com.google.protobuf.kotlin.DslList<bookingSystem.FlightOuterClass.Flight, FlightsProxy>.addAll(values: kotlin.collections.Iterable<bookingSystem.FlightOuterClass.Flight>) {
      _builder.addAllFlights(values)
    }
    /**
     * `repeated .bookingSystem.Flight flights = 1;`
     * @param values The flights to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFlights")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bookingSystem.FlightOuterClass.Flight, FlightsProxy>.plusAssign(values: kotlin.collections.Iterable<bookingSystem.FlightOuterClass.Flight>) {
      addAll(values)
    }
    /**
     * `repeated .bookingSystem.Flight flights = 1;`
     * @param index The index to set the value at.
     * @param value The flights to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFlights")
    public operator fun com.google.protobuf.kotlin.DslList<bookingSystem.FlightOuterClass.Flight, FlightsProxy>.set(index: kotlin.Int, value: bookingSystem.FlightOuterClass.Flight) {
      _builder.setFlights(index, value)
    }
    /**
     * `repeated .bookingSystem.Flight flights = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFlights")
    public fun com.google.protobuf.kotlin.DslList<bookingSystem.FlightOuterClass.Flight, FlightsProxy>.clear() {
      _builder.clearFlights()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bookingSystem.Booking.FlightList.copy(block: `bookingSystem`.FlightListKt.Dsl.() -> kotlin.Unit): bookingSystem.Booking.FlightList =
  `bookingSystem`.FlightListKt.Dsl._create(this.toBuilder()).apply { block() }._build()

