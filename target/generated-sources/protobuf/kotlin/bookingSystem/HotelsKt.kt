// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: booking.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bookingSystem;

@kotlin.jvm.JvmName("-initializehotels")
public inline fun hotels(block: bookingSystem.HotelsKt.Dsl.() -> kotlin.Unit): bookingSystem.Booking.Hotels =
  bookingSystem.HotelsKt.Dsl._create(bookingSystem.Booking.Hotels.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `bookingSystem.Hotels`
 */
public object HotelsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bookingSystem.Booking.Hotels.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bookingSystem.Booking.Hotels.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bookingSystem.Booking.Hotels = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class HotelsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .bookingSystem.Hotel hotels = 1;`
     */
     public val hotels: com.google.protobuf.kotlin.DslList<bookingSystem.HotelOuterClass.Hotel, HotelsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getHotelsList()
      )
    /**
     * `repeated .bookingSystem.Hotel hotels = 1;`
     * @param value The hotels to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addHotels")
    public fun com.google.protobuf.kotlin.DslList<bookingSystem.HotelOuterClass.Hotel, HotelsProxy>.add(value: bookingSystem.HotelOuterClass.Hotel) {
      _builder.addHotels(value)
    }
    /**
     * `repeated .bookingSystem.Hotel hotels = 1;`
     * @param value The hotels to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignHotels")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bookingSystem.HotelOuterClass.Hotel, HotelsProxy>.plusAssign(value: bookingSystem.HotelOuterClass.Hotel) {
      add(value)
    }
    /**
     * `repeated .bookingSystem.Hotel hotels = 1;`
     * @param values The hotels to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllHotels")
    public fun com.google.protobuf.kotlin.DslList<bookingSystem.HotelOuterClass.Hotel, HotelsProxy>.addAll(values: kotlin.collections.Iterable<bookingSystem.HotelOuterClass.Hotel>) {
      _builder.addAllHotels(values)
    }
    /**
     * `repeated .bookingSystem.Hotel hotels = 1;`
     * @param values The hotels to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllHotels")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bookingSystem.HotelOuterClass.Hotel, HotelsProxy>.plusAssign(values: kotlin.collections.Iterable<bookingSystem.HotelOuterClass.Hotel>) {
      addAll(values)
    }
    /**
     * `repeated .bookingSystem.Hotel hotels = 1;`
     * @param index The index to set the value at.
     * @param value The hotels to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setHotels")
    public operator fun com.google.protobuf.kotlin.DslList<bookingSystem.HotelOuterClass.Hotel, HotelsProxy>.set(index: kotlin.Int, value: bookingSystem.HotelOuterClass.Hotel) {
      _builder.setHotels(index, value)
    }
    /**
     * `repeated .bookingSystem.Hotel hotels = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearHotels")
    public fun com.google.protobuf.kotlin.DslList<bookingSystem.HotelOuterClass.Hotel, HotelsProxy>.clear() {
      _builder.clearHotels()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bookingSystem.Booking.Hotels.copy(block: `bookingSystem`.HotelsKt.Dsl.() -> kotlin.Unit): bookingSystem.Booking.Hotels =
  `bookingSystem`.HotelsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

